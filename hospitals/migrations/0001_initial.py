# Generated by Django 3.0.3 on 2020-09-10 22:18

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hospitals.models
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hospital_name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('state', models.CharField(choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Enugu', 'Enugu'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('practice_category', models.CharField(choices=[('Diagnostic only', 'Diagnostic only'), ('Therapeutic only', 'Therapeutic only'), ('Diagnostic and Therapeutic', 'Diagnostic and Therapeutic')], max_length=100)),
                ('equipment', multiselectfield.db.fields.MultiSelectField(choices=[('Ultrasound', 'Ultrasound'), ('Conventional X-ray', 'Conventional X-ray'), ('Conventional X-ray with Fluoroscopy', 'Conventional X-ray with Fluoroscopy'), ('CT Scan', 'CT Scan'), ('C-Arm/O-HRM', 'C-Arm/O-HRM'), ('MRI', 'MRI'), ('Mamography', 'Mamography'), ('Angiography', 'Angiography'), ('Dental X-ray', 'Dental X-ray'), ('Echocardiography', 'Echocardiography'), ('Radiotherapy', 'Radiotherapy'), ('Nuclear Medicine', 'Nuclear Medicine')], max_length=172)),
                ('radiographers', models.TextField(blank=True, null=True)),
                ('radiologists', models.TextField(blank=True, null=True)),
                ('visitation_reason', models.CharField(choices=[('Sensitization', 'Sensitization'), ('Enforcement', 'Enforcement')], max_length=100)),
                ('visitation_comments', models.TextField(blank=True)),
                ('date_visited', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('next_visitation_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('cac_certificate', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_license1', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_license2', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('form_c07', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('inspection_zone', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Xray',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('rso_rsa_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('xray_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ultrasound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('ultrasound_qualification_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('support_staff_score', models.IntegerField()),
                ('ultrasound_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_no', models.CharField(max_length=200)),
                ('hospital_name', models.CharField(max_length=200)),
                ('license_category', models.CharField(max_length=200)),
                ('application_type', models.CharField(max_length=100)),
                ('application_status', models.IntegerField(default=4)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('services', models.CharField(max_length=300)),
                ('equipment', models.CharField(max_length=300)),
                ('vet_status', models.IntegerField(default=3)),
                ('payment_amount', models.CharField(max_length=100)),
                ('radiographers', models.CharField(max_length=300)),
                ('radiologists', models.CharField(blank=True, max_length=300, null=True)),
                ('inspection_scheduler', models.CharField(max_length=300)),
                ('inspection_schedule_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_report_deadline', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_zone', models.CharField(choices=[('Abuja', 'Abuja'), ('Enugu', 'Enugu'), ('Lagos', 'Lagos'), ('Sokoto', 'Sokoto'), ('Kano', 'Kano'), ('Port Harcourt', 'Port Harcourt'), ('Asaba', 'Asaba'), ('Calabar', 'Calabar'), ('Nnewi', 'Nnewi')], max_length=100)),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_no', models.CharField(blank=True, default=hospitals.models.increment_application_no, max_length=500, null=True)),
                ('application_type', models.CharField(choices=[('New Registration', 'New Registration'), ('Renewal', 'Renewal')], max_length=100)),
                ('application_status', models.IntegerField(default=1)),
                ('hospital_name', models.CharField(max_length=200)),
                ('license_category', models.CharField(max_length=200)),
                ('rc_number', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('state', models.CharField(choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Enugu', 'Enugu'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('FCT', 'FCT'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara')], max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('services', models.CharField(choices=[('Diagnostic only', 'Diagnostic only'), ('Therapeutic only', 'Therapeutic only'), ('Diagnostic and Therapeutic', 'Diagnostic and Therapeutic')], max_length=100)),
                ('equipment', multiselectfield.db.fields.MultiSelectField(choices=[('Ultrasound', 'Ultrasound'), ('Conventional X-ray', 'Conventional X-ray'), ('Conventional X-ray with Fluoroscopy', 'Conventional X-ray with Fluoroscopy'), ('CT Scan', 'CT Scan'), ('C-Arm/O-HRM', 'C-Arm/O-HRM'), ('MRI', 'MRI'), ('Mamography', 'Mamography'), ('Angiography', 'Angiography'), ('Dental X-ray', 'Dental X-ray'), ('Echocardiography', 'Echocardiography'), ('Radiotherapy', 'Radiotherapy'), ('Nuclear Medicine', 'Nuclear Medicine')], max_length=172)),
                ('radiographers', models.TextField(blank=True)),
                ('radiologists', models.TextField(blank=True, null=True)),
                ('reg_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('cac_certificate', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_license1', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_license2', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('form_c07', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Radiotherapy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('other_staff_score', models.IntegerField()),
                ('radiotherapy_certification_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('rso_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('radiotherapy_accessories_score', models.IntegerField()),
                ('mould_room_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('radiotherapy_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_no', models.CharField(max_length=200)),
                ('hospital_name', models.CharField(max_length=200)),
                ('application_type', models.CharField(max_length=100)),
                ('application_status', models.IntegerField(default=2)),
                ('license_category', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('state', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('services', models.CharField(max_length=200)),
                ('equipment', models.CharField(max_length=200)),
                ('radiographers', models.TextField(blank=True)),
                ('radiologists', models.TextField(blank=True, null=True)),
                ('rrr_number', models.CharField(max_length=100)),
                ('receipt_number', models.CharField(max_length=100)),
                ('payment_amount', models.CharField(max_length=100)),
                ('payment_method', models.CharField(choices=[('Bank', 'Bank')], max_length=10)),
                ('payment_receipt', models.FileField(upload_to='%Y/%m/%d/')),
                ('payment_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('vet_status', models.IntegerField(default=1)),
                ('vet_date', models.DateTimeField(auto_now_add=True)),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vetting_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='vetted_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nuclearmedicine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('nuclear_medicine_physicians_no_score', models.IntegerField()),
                ('other_staff_no_score', models.IntegerField()),
                ('nuclear_medicine_certification_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('radionuclide_accessories_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('radionuclide_storage_unit_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('quality_control_score', models.IntegerField()),
                ('rso_score', models.IntegerField()),
                ('radiation_safety_program_score', models.IntegerField()),
                ('labelling_score', models.IntegerField()),
                ('performance_survey_score', models.IntegerField()),
                ('radioactive_materials_security_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('nuclear_medicine_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mri',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('mri_certification_score', models.IntegerField()),
                ('metal_screening_device_score', models.IntegerField()),
                ('screening_questionnaire_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('technical_room_adequacy_score', models.IntegerField()),
                ('mri_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mamography',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('mammography_certification_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('rso_rsa_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('mamography_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_no', models.CharField(max_length=100)),
                ('hospital_code', models.CharField(blank=True, default=hospitals.models.increment_hospital_code, max_length=500, null=True)),
                ('hospital_name', models.CharField(max_length=200)),
                ('license_category', models.CharField(max_length=200)),
                ('license_type', models.CharField(max_length=200)),
                ('application_status', models.IntegerField(default=8)),
                ('application_type', models.CharField(max_length=100)),
                ('license_no', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('payment_amount', models.CharField(max_length=100)),
                ('inspection_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('issue_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('expiry_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('license_status', models.CharField(choices=[('Active', 'Active'), ('Expired', 'Expired')], max_length=10)),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_no', models.CharField(max_length=100)),
                ('hospital_name', models.CharField(max_length=200)),
                ('equipment', models.CharField(max_length=300)),
                ('license_category', models.CharField(max_length=200)),
                ('application_status', models.IntegerField(default=5)),
                ('application_type', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('radiographers', models.CharField(max_length=300)),
                ('radiologists', models.CharField(max_length=300)),
                ('payment_amount', models.CharField(max_length=100)),
                ('inspection_schedule_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('next_inspection_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_report_deadline', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_zone', models.CharField(max_length=100)),
                ('vet_status', models.IntegerField(default=4)),
                ('inspection_status', models.IntegerField(default=1)),
                ('inspection_total', models.IntegerField(blank=True)),
                ('inspection_comments', models.TextField(blank=True)),
                ('photo_main', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_1', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_2', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_3', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_4', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_5', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_6', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Flouroscopy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('rso_rsa_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('flouroscopy_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Echocardiography',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('echocardiography_certification_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('support_staff_score', models.IntegerField()),
                ('echocardiography_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dentalxray',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('dentalxray_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ctscan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('rso_rsa_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('ctscan_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_no', models.CharField(max_length=100)),
                ('hospital_name', models.CharField(max_length=200)),
                ('license_category', models.CharField(max_length=200)),
                ('application_status', models.IntegerField(default=5)),
                ('application_type', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('equipment', models.CharField(max_length=300)),
                ('radiographers', models.CharField(max_length=300)),
                ('radiologists', models.CharField(blank=True, max_length=300, null=True)),
                ('appraisal_status', models.IntegerField(default=1)),
                ('payment_amount', models.CharField(max_length=100)),
                ('inspection_schedule_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_report_deadline', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('next_inspection_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('inspection_status', models.IntegerField(default=1)),
                ('inspection_zone', models.CharField(max_length=100)),
                ('radiographers_score', models.IntegerField()),
                ('radiologists_score', models.IntegerField()),
                ('support_staff_score', models.IntegerField()),
                ('offices_score', models.IntegerField()),
                ('library_score', models.IntegerField()),
                ('call_room_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('toilets_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('static_xray_score', models.IntegerField()),
                ('mobile_xray_score', models.IntegerField()),
                ('ct_score', models.IntegerField()),
                ('mri_score', models.IntegerField()),
                ('fluoroscopy_score', models.IntegerField()),
                ('nuclear_medicine_score', models.IntegerField()),
                ('radiation_therapy_score', models.IntegerField()),
                ('ultrasound_score', models.IntegerField()),
                ('mammography_score', models.IntegerField()),
                ('dental_equipment_score', models.IntegerField()),
                ('carm_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('diagnostic_room_score', models.IntegerField()),
                ('personnel_score', models.IntegerField()),
                ('cpds_score', models.IntegerField()),
                ('departmental_seminars_score', models.IntegerField()),
                ('licence_status_score', models.IntegerField()),
                ('appraisal_total', models.IntegerField()),
                ('appraisal_comments', models.TextField(blank=True)),
                ('photo_main', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_1', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_2', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_3', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_4', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_5', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('photo_6', models.ImageField(blank=True, upload_to='%Y/%m/%d/')),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Angiography',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shielding_score', models.IntegerField()),
                ('room_design_score', models.IntegerField()),
                ('radiographers_no_score', models.IntegerField()),
                ('radiologists_no_score', models.IntegerField()),
                ('radiographer_license_score', models.IntegerField()),
                ('angiography_certification_score', models.IntegerField()),
                ('prmd_prpe_score', models.IntegerField()),
                ('rso_rsa_score', models.IntegerField()),
                ('water_supply_score', models.IntegerField()),
                ('equipment_certification_score', models.IntegerField()),
                ('accessories_adequacy_score', models.IntegerField()),
                ('warning_lights_score', models.IntegerField()),
                ('warning_signs_score', models.IntegerField()),
                ('C07_form_compliance_score', models.IntegerField()),
                ('equipment_installation_location_score', models.IntegerField()),
                ('processing_unit_score', models.IntegerField()),
                ('toilets_cleanliness_score', models.IntegerField()),
                ('waiting_room_score', models.IntegerField()),
                ('offices_adequacy_score', models.IntegerField()),
                ('angiography_total', models.IntegerField()),
                ('practice_manager', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
